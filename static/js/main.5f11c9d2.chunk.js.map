{"version":3,"sources":["components/images/mapicon.png","components/Navbar/Navbar.js","ButtonContainer.js","components/YelpGoolgeApi/YelpGoogleMap.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HamburgerMenu","openNav","document","getElementById","style","height","closeNav","react_default","a","createElement","id","className","href","onClick","this","react_router_dom","to","src","logo","width","alt","React","Component","ButtonContainer","styled","button","_templateObject","mainFunction","yelp_params","callback","require","get","concat","headers","Authorization","params","categories","then","res","data","businesses","catch","err","console","log","Map","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","stores","title","openInfoWindowMarkerId","handleInputChange","event","cancelable","persist","preventDefault","setState","target","value","handleFormSubmit","yelp","handleToggleOpen","markerId","handleToggleClose","CMap","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","children","_this2","coordinates","_this3","map","restaurant","i","type","name","onChange","react","googleMapURL","loadingElement","containerElement","mapElement","center","slice","key","position","latitude","longitude","onCloseClick","Card_default","Img","variant","image_url","rating","Button_default","rel","url","defaultProps","App","Fragment","Navbar","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f11c9d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mapicon.5fdcd9e5.png\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport logo from '../images/mapicon.png';\n\n\nclass HamburgerMenu extends React.Component {\n\n  // --------------------\n  \n  // The code below slides in the overlay navigation menu downwards from the top (0 to 100% height), when it is triggered:\n\n  // Open when someone clicks on the span element\n  openNav = () => {\n    document.getElementById(\"myNav\").style.height = \"100%\";\n  }\n    \n  // Close when someone clicks on the \"x\" symbol inside the overlay\n  closeNav = () => {\n    document.getElementById(\"myNav\").style.height = \"0%\";\n  }\n\n  // --------------------\n\n  render() {\n    return(\n      <div>\n        {/* HAMBURGER MENU */}\n\n        {/* The Overlay */}\n        <div id=\"myNav\" className=\"overlay\">\n\n          {/* Button to close the overlay navigation */}\n          <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={this.closeNav}>&times;</a> \n          {/* &times; is the icon for X */}\n\n          {/* Overlay content */}\n          <div className=\"overlay-content\">\n            <span className=\"nonActiveButton\">Calorie Entry</span>\n            <Link to=\"/\">\n                   <img \n                   src={logo} width={30} height={30}\n                   alt=\"store\" className=\"navbar-brand\"/>\n                   <h3>map</h3>\n               </Link>             <Link to=\"/map\">\n                   <img \n                   src={logo} width={30} height={30}\n                   alt=\"store\" className=\"navbar-brand\"/>\n                   <h3>map</h3>\n               </Link>            <a href=\"index.html\">Recipes Finder</a>\n            {/* <a href=\"index.html\">Health Timeline</a> */}\n            {/* <a href=\"index.html\">Digital Health Card</a> */}\n            {/* <a href=\"index.html\">Resources</a> */}\n            {/* <a href=\"index.html\">Contact</a> */}\n            <a href=\"https://www.google.com\">\">Sign Out</a>\n          </div>\n\n        </div>\n\n        {/* Top Bar and Branding Text */}\n        <div className=\"topBar\">\n          {/* <span class=\"branding\">Branding</span> */}\n          <a className=\"branding\" href=\"https://www.google.com\">DiaBeatIt</a>\n        </div>\n\n        {/* Hamburger Menu */}\n        <div className=\"topnav\">\n\n        {/* Hamburger icon */}\n        <a href=\"javascript:void(0);\" className=\"icon\" onClick={this.openNav}>&#9776;</a> \n        {/* &#9776; is the hamburger icon */}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HamburgerMenu;\n","import styled from \"styled-components\"\n// import \"./App.css\"\n\n\nexport const ButtonContainer = styled.button`\ntext-transform:capitalize;\nfont-size:1.4rem;\nbackground: transparent;\nborder:0.05rem solid var(--lightBlue);\ncolor:var(--lightBlue)\nborder-radius:0.5rem;\npadding: 0.2rem 0.5rem;\ncursor:pointer;\nmargin:0.2rem 0.2rem 0;\ntransition:all 0.5s ease-in-out !important;\n&:hover{background:(var--lightBlue)!important;\ncolor:var(--lightYellow);\n};\n&:focus{\n    outline: none;\n}\n\n`;\n","import React, { Component, Fragment } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,InfoWindow\n} from \"react-google-maps\";\nimport \"./index.css\"\nimport {ButtonContainer} from \"../../ButtonContainer\"\nimport 'bootstrap/dist/css/bootstrap.min.css' \n\n\n\n\n// sets default markers by passing yelp_params into the yelp api query string\n\nfunction mainFunction(yelp_params, callback) {\n     \n        const axios =require (\"axios\")\n       var str= axios\n         .get(\n           `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?&location=`+yelp_params,\n           {\n             headers: {\n               Authorization: `Bearer ` + process.env.REACT_APP_YELP_KEY\n             }\n             ,\n             params: {\n               categories: \"healthmarkets\",\n             }\n           }\n         )\n         .then( res => {\n            callback(res.data)\n            return (res.data.businesses[0].id)\n            \n         })\n         .catch(err => {\n           console.log(err);\n        //    alert(\"please enter a city name or zip code\")\n         })\n\n          }\n         \nclass Map extends Component{\n \n  state = {\n    stores:[],\n    title: 'Whole Foods',\n    openInfoWindowMarkerId: '',\n  };\n\n\n  componentDidMount() {\n    // once the component mounts, i make the call to the api\n    mainFunction((yelp)=>{console.log(yelp.businesses[0].coordinates);\n    this.setState({\n      stores: yelp.businesses,\n      title: this.state.yelp_params\n    });\n  \n  })\n\n  }\n\n\n  handleInputChange = event => {\n    event.cancelable=false;\n    event.persist()\n    event.preventDefault();\n    // console.log(event.target.value)\n    // console.log(this.state);\n\n    this.setState({\n        title: event.target.value,\n    });\n    // mainFunction(this.state.yelp_params, (yelp)=>{\n    // this.setState({\n    //   stores: yelp.businesses,\n    //   title: event.target.value,\n    // });\n  \n//   })\n \n  };\n  handleFormSubmit = event => {\n    // Preventing the default behavior of the form submit (which is to refresh the page)\n    event.preventDefault();\n\n    mainFunction(this.state.title, (yelp)=>{\n        // Updating the input's state\n        // console.log(yelp.businesses);\n\n        this.setState({\n            stores: yelp.businesses,\n        });\n        // console.log(this.state.stores[0].coordinates)\n\n        })\n  };\n\n    static defaultProps = {\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\"+ process.env.REACT_APP_GOOGLE_KEY+ \"&v=3.exp&libraries=geometry,drawing,places\",\n    }\n\n    constructor(props) {\n        super(props);\n        mainFunction((yelp)=>{\n          // console.log(yelp.businesses)\n\n        this.state = {\n          stores: yelp.businesses,\n          title: this.state.yelp_params,\n      }\n    })\n    }\n    \n    handleToggleOpen = (markerId) => {\n      this.setState({\n        openInfoWindowMarkerId: markerId\n      });\n  }\n\n  handleToggleClose = () => {\n      this.setState({\n        openInfoWindowMarkerId:\"\"\n      });\n  }\n\n\n    CMap = withScriptjs(withGoogleMap(props =>\n      \n        <GoogleMap\n          defaultZoom={10}\n          defaultCenter={{ lat:40.7799404643263, lng: -73.980282552649}}\n        >\n            {props.children}\n             \n        </GoogleMap>\n      ));\n\n    render() {\n      this.state.stores.map((restaurant,i) => \"do\")\n        return (\n\n\n          <div className=\"py-5\">\n    <div className=\"container\"> \n    {/* <Title name=\"our\" title=\"products\"/>   <div className=\"row\"> */}\n\n \n          \n\n<div >\n<form >\n  <label>\n    Enter a Location:\n    <input type=\"text\" name=\"name\"   \n        // line below takes away my ability to change the input\n    //  value={this.state.title}           \n  onChange={this.handleInputChange}\n/>\n\n\n{/* <button onClick={this.handleFormSubmit} >Submit</button> */}\n<ButtonContainer  onClick={this.handleFormSubmit}>\n                   <span className=\"mr-2\"><i className=\"fas fa-carrot\">Search</i></span>\n               </ButtonContainer>\n\n  </label>\n  \n</form>\n\n<div className=\"container\">\n  <div className=\"row mt-5\">\n    <div className=\"col-sm-12\">\n\n      {/* <form> */}\n\n        {/* <div className=\"form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"react-tips\"\n              value=\"option1\"\n              checked={true}\n              className=\"form-check-input\"\n            />\n            Option 1\n          </label>\n        </div>\n\n        <div className=\"form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"react-tips\"\n              value=\"option2\"\n              className=\"form-check-input\"\n            />\n            Option 2\n          </label>\n        </div>\n\n        <div className=\"form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"react-tips\"\n              value=\"option3\"\n              className=\"form-check-input\"\n            />\n            Option 3\n          </label>\n        </div> */}\n\n        {/* <div className=\"form-group\">\n          <button className=\"btn btn-primary mt-2\" type=\"submit\">\n            Save\n          </button>\n        </div> */}\n\n      {/* </form> */}\n\n    </div>\n  </div>\n</div>\n\n          \n            <Fragment>\n              <div>\n                <this.CMap\n                  googleMapURL={this.props.googleMapURL}\n                    \n                    loadingElement={<div style={{ height: `100%` }} />}\n                    containerElement={<div style={{width:\"60vw\", height:\"100vh\"}} />}\n                    mapElement={<div style={{ height: `100%` }} />}\n                    center= {{ lat: 25.03, lng: 121.6 }} \n                >\n\n                   {this.state.stores.slice(0, 5).map((restaurant,i) => (\n        <Marker\n                    \n          key={i}\n          position={{\n            lat: restaurant.coordinates.latitude,\n            lng: restaurant.coordinates.longitude\n          }}\n          \n          onClick={() => this.handleToggleOpen(i)}\n          \n        >\n                { \n\n                this.state.openInfoWindowMarkerId===i&&\n \n          <InfoWindow \n          onCloseClick={() => this.handleToggleClose(i)\n          }\n\n          position={{\n            lat: restaurant.coordinates.latitude,\n            lng: restaurant.coordinates.longitude\n          }}\n        >\n                 <Card style={{ width: '6rem' }}>\n                 <Card.Img variant=\"top\"  src={restaurant.image_url} style={{ width: '50%' }} />               \n                <p>rating: {restaurant.rating} <Card.Img variant=\"top\"  src=\"http://pluspng.com/img-png/yellow-stars-png-hd-golden-star-rotate-3d-render-footage-in-4k-chroma-key-green-screen-852.jpg\" style={{ width: '25%' }} /></p>\n            <Button variant=\"outline-success\"rel=\"noreferrer noopener\" target=\"_blank\" href={restaurant.url} >{restaurant.name}</Button>\n            </Card>\n        </InfoWindow>\n         }\n        </Marker>\n      ))}\n                </this.CMap>\n                </div>\n            </Fragment>\n            </div>\n            </div>\n</div>\n\n            \n        );\n    }\n}\n\nexport default Map;","import React from 'react';\n//  defining routes with switch \"component\" \nimport {Switch,Route } from 'react-router-dom';\n\nimport './App.css';\n// import 'bootstrap/dist/css/bootstrap.min.css' \nimport  HamburgerMenu from './components/Navbar/Navbar' \nimport  Map from './components/YelpGoolgeApi/YelpGoogleMap' \n\n// import  Products from './components/Products' \n// import  Product from './components/Product' \n// import  ProductDetails from './components/ProductDetails' \n\n// import  Cart from './components/Cart' \n// default is where the app goes if the route doesnt exist. \"route handling\"\n// import  Default from './components/Default' \n\n\n\n\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <HamburgerMenu></HamburgerMenu>\n      {/* defining routes with switch \"component\" */}\n      <Switch>\n        {/* using exact path makes it so that the switch statement works properly. if not used, all routes that include \"/\" for example \"/productdetails\" will go to \"/\" because it includes \"/\" */}\n        <Route exact path=\"/\" component={Map}></Route>\n        <Route  path=\"/map\" component={Map}></Route>\n\n        {/* <Route path=\"/productDetails\" component={ProductDetails}></Route> */}\n        {/* <Route path=\"/cart\" component={Cart}></Route> */}\n        {/* <Route  component={Default}></Route> */}\n        {/* <Route exact path=\"/\" component={Map}></Route> */}\n\n\n\n      </Switch>\n      {/* <Products></Products> */}\n      {/* <ProductDetails></ProductDetails> */}\n      {/* <Cart></Cart> */}\n      {/* <Default></Default> */}\n      {/* <Product></Product> */}\n\n    </React.Fragment>\n\n    \n   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}